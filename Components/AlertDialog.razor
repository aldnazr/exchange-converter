@code {
    [Parameter] public string? Title { get; set; }
    [Parameter] public RenderFragment? ChildContent { get; set; }
    [Parameter] public EventCallback OnConfirm { get; set; }
    [Parameter] public EventCallback OnCancel { get; set; }

    public bool IsVisible { get; set; }

    public void Show() => IsVisible = true;
    public void Hide() => IsVisible = false;
}

@if (IsVisible)
{
    <div class="modal fade show" style="display:block;" tabindex="-1">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content shadow-lg rounded-4">
                <div class="modal-header">
                    <h5 class="modal-title">@Title</h5>
                    <button type="button" class="btn-close" @onclick="Hide"></button>
                </div>
                <div class="modal-body">
                    @ChildContent
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" @onclick="async () => { Hide(); await OnCancel.InvokeAsync(); }">
                        Cancel
                    </button>
                    <button class="btn btn-primary" @onclick="async () => { Hide(); await OnConfirm.InvokeAsync(); }">
                        OK
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal-backdrop fade show"></div>
}
